import discord
import random  # –î–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–ª—É—á–∞–π–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
from discord.ext import commands
from discord import app_commands
import os
from threading import Thread
from flask import Flask
import re

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Flask
app = Flask(__name__)

@app.route('/')
def home():
    return 'Bot is running!'

# –ó–∞–ø—É—Å–∫ Flask –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
def run_flask():
    app.run(host='0.0.0.0', port=int(os.getenv('PORT', 10000)))

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞
intents = discord.Intents.default()
intents.message_content = True
intents.guilds = True
intents.members = True
intents.messages = True
bot = commands.Bot(command_prefix="!", intents=intents)

TOKEN = os.getenv('TOKEN')

# ID –∫–∞–Ω–∞–ª–æ–≤
COUNTING_CHANNEL_ID = 1344299177386967120  # –ö–∞–Ω–∞–ª —Å—á–∏—Ç–∞–ª–∫–∏
SCREENSHOT_CHANNEL_ID = 1344388680953106512  # –ö–∞–Ω–∞–ª —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ —á–∏—Å–µ–ª –≤ —Ç–µ–∫—Å—Ç–µ
def find_numbers(text):
    return [int(num) for num in re.findall(r'\b\d+\b', text)]  # –ò—â–µ—Ç –≤—Å–µ —á–∏—Å–ª–∞ –≤ —Ç–µ–∫—Å—Ç–µ

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã—Ö GIF
used_gifs = {}

# –°–ø–∏—Å–æ–∫ –≤–æ–∑–º–æ–∂–Ω—ã—Ö GIF
gif_urls = [
    "https://cdn.discordapp.com/attachments/1346943612373569557/1347573414142939279/attachment.gif",
    "https://cdn.discordapp.com/attachments/1322781202851041358/1347037669388980274/attachment.gif",
    "https://cdn.discordapp.com/attachments/1309799105756790794/1309909672446398534/speechmemified_Half_Life_Deathmatch_Source.jpg.gif",
    "https://tenor.com/view/speech-bubble-gif-26412022",
    "https://media.discordapp.net/attachments/1055080776808546353/1177601225542352927/attachment.gif"
]

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —Ä–∞–∑–Ω—ã—Ö –∫–∞–Ω–∞–ª–∞—Ö
@bot.event
async def on_message(message):
    if message.author.bot:
        return
    
# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –±–æ—Ç —É–ø–æ–º—è–Ω—É—Ç –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏, –∏ —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ –µ–≥–æ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    if bot.user in message.mentions and message.reference is None:
        user_id = message.author.id

        # –ï—Å–ª–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É–∂–µ –±—ã–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω—ã –≤—Å–µ GIF, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫
        if user_id in used_gifs and len(used_gifs[user_id]) == len(gif_urls):
            used_gifs[user_id] = []  # –°–±—Ä–æ—Å–∏—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–µ GIF

        # –í—ã–±–∏—Ä–∞–µ–º GIF, –∫–æ—Ç–æ—Ä—ã–π –µ—â–µ –Ω–µ –±—ã–ª –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω —ç—Ç–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
        available_gifs = [gif for gif in gif_urls if gif not in used_gifs.get(user_id, [])]
        gif_url = random.choice(available_gifs)

        # –î–æ–±–∞–≤–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π GIF –≤ —Å–ø–∏—Å–æ–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã—Ö
        if user_id not in used_gifs:
            used_gifs[user_id] = []
        used_gifs[user_id].append(gif_url)

        await message.reply(gif_url)

    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
    await bot.process_commands(message)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∫–∞–Ω–∞–ª–µ —Å—á–∏—Ç–∞–ª–∫–∏
    if message.channel.id == COUNTING_CHANNEL_ID:
        numbers_in_message = find_numbers(message.content)
        if not numbers_in_message:
            await message.delete()
            warning = await message.channel.send(
                f"{message.author.mention}, —Ç–≤–æ—ë —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —á–∏—Å–ª–æ –±–æ–ª—å—à–µ –ø—Ä–æ—à–ª–æ–≥–æ –Ω–∞ 1, –Ω–µ –Ω–∞—Ä—É—à–∞–π —Ü–µ–ø–æ—á–∫—É!"
            )
            await warning.delete(delay=3)
            return

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∫–∞–Ω–∞–ª–µ –¥–ª—è —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤
    if message.channel.id == SCREENSHOT_CHANNEL_ID:
        if not message.attachments:
            await message.delete()
            warning = await message.channel.send(
                f"{message.author.mention}, —Ç—ã –¥–æ–ª–∂–µ–Ω –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è, –Ω–µ –Ω–∞—Ä—É—à–∞–π —Ü–µ–ø–æ—á–∫—É!"
            )
            await warning.delete(delay=3)
            return

    await bot.process_commands(message)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–ª—ç—à-–∫–æ–º–∞–Ω–¥—ã /boolean
@bot.tree.command(name="boolean", description="–°–ª—É—á–∞–π–Ω–æ –≤—ã–±–∏—Ä–∞–µ—Ç –º–µ–∂–¥—É True –∏ False")
@app_commands.describe(question="–í–æ–ø—Ä–æ—Å, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –æ—Ç–≤–µ—Ç–∏—Ç—å")
async def boolean_command(interaction: discord.Interaction, question: str = None):
    if question is None:
        question = "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
    response = random.choice(["True", "False"])

    embed = discord.Embed(color=discord.Color.blue())
    embed.add_field(name="–í–æ–ø—Ä–æ—Å", value=question, inline=False)
    embed.add_field(name="–°–ª—É—á–∞–π–Ω—ã–π –æ—Ç–≤–µ—Ç", value=response, inline=False)

    await interaction.response.send_message(embed=embed)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–ª—ç—à-–∫–æ–º–∞–Ω–¥—ã /numbersrange
@bot.tree.command(name="numbersrange", description="–í—ã–±–∏—Ä–∞–µ—Ç —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –≤ –∑–∞–¥–∞–Ω–Ω–æ–º –¥–∏–∞–ø–∞–∑–æ–Ω–µ")
@app_commands.describe(start="–ù–∞—á–∞–ª–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ (—Ü–µ–ª–æ–µ —á–∏—Å–ª–æ)", end="–ö–æ–Ω–µ—Ü –¥–∏–∞–ø–∞–∑–æ–Ω–∞ (—Ü–µ–ª–æ–µ —á–∏—Å–ª–æ)")
async def numbersrange_command(interaction: discord.Interaction, start: int, end: int):
    if start > end:
        await interaction.response.send_message("–û—à–∏–±–∫–∞: –Ω–∞—á–∞–ª–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –±–æ–ª—å—à–µ –∫–æ–Ω—Ü–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.", ephemeral=True)
        return
    
    random_number = random.randint(start, end)

    embed = discord.Embed(color=discord.Color.blue())
    embed.add_field(name="–î–∏–∞–ø–∞–∑–æ–Ω", value=f"{start} - {end}", inline=False)
    embed.add_field(name="–í—ã–±—Ä–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ", value=str(random_number), inline=False)

    await interaction.response.send_message(embed=embed)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–ª—ç—à-–∫–æ–º–∞–Ω–¥—ã /calculate
@bot.tree.command(name="calculate", description="–†–µ—à–∞–µ—Ç –ø—Ä–∏–º–µ—Ä—ã")
@app_commands.describe(number1="–ü–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ", operator="–û–ø–µ—Ä–∞—Ç–æ—Ä (+, -, *, /)", number2="–í—Ç–æ—Ä–æ–µ —á–∏—Å–ª–æ")
async def calculate_command(interaction: discord.Interaction, number1: float, operator: str, number2: float):
    try:
        if operator not in ['+', '-', '*', '/']:
            raise ValueError("–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π –æ–ø–µ—Ä–∞—Ç–æ—Ä. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ +, -, *, –∏–ª–∏ /")
        
        if operator == '+':
            result = number1 + number2
        elif operator == '-':
            result = number1 - number2
        elif operator == '*':
            result = number1 * number2
        elif operator == '/':
            if number2 == 0:
                raise ZeroDivisionError("–î–µ–ª–µ–Ω–∏–µ –Ω–∞ –Ω–æ–ª—å –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ")
            result = number1 / number2

        if result.is_integer():
            result = int(result)

        embed = discord.Embed(color=discord.Color.blue())
        embed.add_field(name="–ü—Ä–∏–º–µ—Ä", value=f"{number1} {operator} {number2}", inline=False)
        embed.add_field(name="–û—Ç–≤–µ—Ç", value=str(result), inline=False)

        await interaction.response.send_message(embed=embed)
    except Exception as e:
        await interaction.response.send_message(f"–û—à–∏–±–∫–∞: {e}", ephemeral=True)


# –ö–æ–º–∞–Ω–¥–∞ —Å—Å—ã–ª–æ–∫
@bot.tree.command(name="links", description="–°—Å—ã–ª–∫–∏ –Ω–∞ —Å–æ—Ü—Å–µ—Ç–∏ Netushki")
async def links_command(interaction: discord.Interaction):
    embed = discord.Embed(title="üîó –°–æ—Ü—Å–µ—Ç–∏ Netushki", color=discord.Color.blue())

    embed.add_field(
        name="### –ü—Ä–æ—Å–º–æ—Ç—Ä",
        value=(
            "<:YouTube:1311661038453788772> **YouTube:** [–°–º–æ—Ç—Ä–µ—Ç—å](https://youtube.com/channel/UCsGPCMtrGbO-xHm1P83yQdg)\n"
            "<:Twitch:1333125928426930236> **Twitch:** [–°–º–æ—Ç—Ä–µ—Ç—å](https://www.twitch.tv/snow_netushki)"
        ),
        inline=False
    )

    embed.add_field(
        name="### –ü–æ—Å—Ç—ã –∏ —á–∞—Ç",
        value=(
            "<:Telegram:1311660935139823697> **Telegram –ö–∞–Ω–∞–ª:** [–ü–µ—Ä–µ–π—Ç–∏](https://t.me/+FqErRZgH_rg5YzZi)\n"
            "<:Discord:1330215982416789595> **Discord –°–µ—Ä–≤–µ—Ä:** [–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è](https://discord.com/invite/YyPdeKDESa)"
        ),
        inline=False
    )

    embed.add_field(
        name="### –û—Å—Ç–∞–ª—å–Ω–æ–µ",
        value=(
            "<:DonationAlerts:1311660998481940542> **–î–æ–Ω–∞—Ç (Donation Alerts):** [–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å](https://www.donationalerts.com/r/netushki)"
        ),
        inline=False
    )

    await interaction.response.send_message(embed=embed)

# –ö–æ–º–∞–Ω–¥–∞ –≤—ã–±–æ—Ä–∞ —Ä–∞–Ω–¥–æ–º–Ω–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞
@bot.tree.command(name="choose", description="–í—ã–±–∏—Ä–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö")
@app_commands.describe(
    option1="–û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç 1",
    option2="–û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç 2",
    option3="–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç",
    option4="–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç",
    option5="–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç",
    option6="–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç",
    option7="–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç",
    option8="–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç",
    option9="–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç",
    option10="–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç"
)
async def choose_command(
    interaction: discord.Interaction,
    option1: str,
    option2: str,
    option3: str = None,
    option4: str = None,
    option5: str = None,
    option6: str = None,
    option7: str = None,
    option8: str = None,
    option9: str = None,
    option10: str = None
):
    options = [option1, option2]
    extra_options = [option3, option4, option5, option6, option7, option8, option9, option10]
    
    # –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏, –µ—Å–ª–∏ –æ–Ω–∏ –Ω–µ –ø—É—Å—Ç—ã–µ
    options.extend(filter(None, extra_options))

    chosen_option = random.choice(options)  # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç

    embed = discord.Embed(title="üé≤ –°–ª—É—á–∞–π–Ω—ã–π –≤—ã–±–æ—Ä", color=discord.Color.blue())
    embed.add_field(name="–í–∞—Ä–∏–∞–Ω—Ç—ã", value="\n".join(f"- {opt}" for opt in options), inline=False)
    embed.add_field(name="‚úÖ –í—ã–±—Ä–∞–Ω–æ", value=f"**{chosen_option}**", inline=False)

    await interaction.response.send_message(embed=embed)

# –ö–æ–º–∞–Ω–¥–∞ —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∞–≤–∞—Ç–∞—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@bot.tree.command(name="avatar", description="–ü–æ–ª—É—á–∞–µ—Ç –∞–≤–∞—Ç–∞—Ä —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
@app_commands.describe(user="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, —á–µ–π –∞–≤–∞—Ç–∞—Ä –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–≤–∏–¥–µ—Ç—å")
async def avatar_command(interaction: discord.Interaction, user: discord.Member):
    embed = discord.Embed(title=f"–í–æ—Ç –∞–≤–∞—Ç–∞—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.display_name}", color=discord.Color.blue())
    embed.set_image(url=user.avatar.url if user.avatar else user.default_avatar.url)

    await interaction.response.send_message(embed=embed)

import asyncio

# –ö–æ–º–∞–Ω–¥–∞ —Ç–∞–π–º–µ—Ä–∞
@bot.tree.command(name="timer", description="–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ç–∞–π–º–µ—Ä, –∞ –ø–æ—Ç–æ–º –ø–∏–Ω–≥—É–µ—Ç –≤–∞—Å")
@app_commands.describe(seconds="–°–µ–∫—É–Ω–¥—ã", minutes="–ú–∏–Ω—É—Ç—ã", hours="–ß–∞—Å—ã")
async def timer_command(interaction: discord.Interaction, seconds: int = 0, minutes: int = 0, hours: int = 0):
    total_seconds = (hours * 3600) + (minutes * 60) + seconds

    if total_seconds <= 0:
        await interaction.response.send_message("–í—ã –Ω–µ –≤–≤–µ–ª–∏ –Ω–∏ —Å–µ–∫—É–Ω–¥—ã, –Ω–∏ –º–∏–Ω—É—Ç—ã, –Ω–∏ —á–∞—Å—ã!", ephemeral=True)
        return

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–≥–æ –æ—Ç—Å—á–µ—Ç–∞ –≤—Ä–µ–º–µ–Ω–∏
    timer_message = f"–¢–∞–π–º–µ—Ä —Å—Ä–∞–±–æ—Ç–∞–µ—Ç —á–µ—Ä–µ–∑ <t:{int((interaction.created_at.timestamp()) + total_seconds)}:R> ‚è≥"
    await interaction.response.send_message(timer_message)

    await asyncio.sleep(total_seconds)  # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–¥–∞–Ω–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏

    await interaction.channel.send(f"{interaction.user.mention}, —Ç–∞–π–º–µ—Ä —Å—Ä–∞–±–æ—Ç–∞–ª! ‚è∞")

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ–± –∏–≥—Ä–µ (—à–∞—Ä–∏–∫)
games = {}

# –¢–∞–π–º–µ—Ä –¥–ª—è –æ–∫–æ–Ω—á–∞–Ω–∏—è –∏–≥—Ä—ã –ø—Ä–∏ –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ (—à–∞—Ä–∏–∫)
async def end_game_after_timeout(channel_id):
    await asyncio.sleep(5 * 60)  # 5 –º–∏–Ω—É—Ç
    if channel_id in games:
        del games[channel_id]  # –ó–∞–∫–æ–Ω—á–∏—Ç—å –∏–≥—Ä—É –∏–∑-–∑–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
        channel = bot.get_channel(channel_id)
        await channel.send("–ò–≥—Ä–∞ –∑–∞–∫–æ–Ω—á–µ–Ω–∞ –∏–∑-–∑–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 5 –º–∏–Ω—É—Ç.")

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Å—Ç–∞—Ä—Ç–∞ –∏–≥—Ä—ã —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –∑–∞–¥–∞—Ç—å –≤—Ä–µ–º—è (—à–∞—Ä–∏–∫)
@bot.command(name='—à–∞—Ä–∏–∫')
async def start_game(ctx, time_limit: int = 0):
    if ctx.channel.id in games:
        await ctx.send("–ò–≥—Ä–∞ —É–∂–µ –∑–∞–ø—É—â–µ–Ω–∞ –≤ —ç—Ç–æ–º –∫–∞–Ω–∞–ª–µ!")
        return

    # –ó–∞–≥–∞–¥–∞—Ç—å —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100 (—à–∞—Ä–∏–∫)
    secret_number = random.randint(1, 100)
    games[ctx.channel.id] = {
        "secret_number": secret_number,
        "players": {},
        "start_time": asyncio.get_event_loop().time(),  # –í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã
        "time_limit": time_limit
    }

    await ctx.send(f"–ò–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å! –£–≥–∞–¥–∞–π—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É–≥–∞–¥–∞—Ç—å, –æ—Ç–ø—Ä–∞–≤–∏–≤ –∫–æ–º–∞–Ω–¥—É `/—É–≥–∞–¥–∞—Ç—å [—á–∏—Å–ª–æ]`.")

    if time_limit > 0:
        await ctx.send(f"–£ –≤–∞—Å –µ—Å—Ç—å {time_limit} –º–∏–Ω—É—Ç –Ω–∞ —É–≥–∞–¥—ã–≤–∞–Ω–∏–µ.")

        # –ó–∞–ø—É—Å–∫ —Ç–∞–π–º–µ—Ä–∞ –Ω–∞ –æ–∫–æ–Ω—á–∞–Ω–∏–µ –∏–≥—Ä—ã –ø–æ –≤—Ä–µ–º–µ–Ω–∏ (—à–∞—Ä–∏–∫)
        asyncio.create_task(end_game_after_timeout(ctx.channel.id))

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —É–≥–∞–¥—ã–≤–∞–Ω–∏—è —á–∏—Å–ª–∞ (—à–∞—Ä–∏–∫)
@bot.command(name='—É–≥–∞–¥–∞—Ç—å')
async def guess_number(ctx, guess: int):

    # –ü—Ä–æ–≤–µ—Ä–∫–∞, –∑–∞–ø—É—â–µ–Ω–∞ –ª–∏ –∏–≥—Ä–∞ –≤ —ç—Ç–æ–º –∫–∞–Ω–∞–ª–µ (—à–∞—Ä–∏–∫)
    if ctx.channel.id not in games:
        await ctx.send("–ò–≥—Ä–∞ –Ω–µ –Ω–∞—á–∞–ª–∞—Å—å. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É `/—à–∞—Ä–∏–∫`, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å.")
        return

    game = games[ctx.channel.id]
    secret_number = game["secret_number"]

    # –ü—Ä–æ–≤–µ—Ä–∫–∞, –¥–µ–ª–∞–ª –ª–∏ –∏–≥—Ä–æ–∫ —É–∂–µ –ø–æ–ø—ã—Ç–∫—É (—à–∞—Ä–∏–∫)
    if ctx.author.id in game["players"]:
        await ctx.send(f"{ctx.author.mention}, –≤—ã —É–∂–µ –ø—ã—Ç–∞–ª–∏—Å—å —É–≥–∞–¥–∞—Ç—å —á–∏—Å–ª–æ.")
        return

    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–≥—Ä–æ–∫–∞ (—à–∞—Ä–∏–∫)
    game["players"][ctx.author.id] = guess

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–≥–∞–¥–∞–ª –ª–∏ –∏–≥—Ä–æ–∫ (—à–∞—Ä–∏–∫)
    if guess < secret_number:
        await ctx.send(f"{ctx.author.mention}, –≤–∞—à–µ —á–∏—Å–ª–æ –º–µ–Ω—å—à–µ!")
    elif guess > secret_number:
        await ctx.send(f"{ctx.author.mention}, –≤–∞—à–µ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ!")
    else:
        await ctx.send(f"{ctx.author.mention}, –ø–æ–∑–¥—Ä–∞–≤–ª—è—é! –í—ã —É–≥–∞–¥–∞–ª–∏ —á–∏—Å–ª–æ {secret_number}!")
        del games[ctx.channel.id]  # –ó–∞–∫—Ä—ã—Ç–∏–µ –∏–≥—Ä—ã –ø–æ—Å–ª–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ (—à–∞—Ä–∏–∫)

    # –ü—Ä–æ–≤–µ—Ä–∫–∞, –µ—Å–ª–∏ –≤—Ä–µ–º—è –≤—ã—à–ª–æ (—à–∞—Ä–∏–∫)
    if game["time_limit"] > 0 and asyncio.get_event_loop().time() - game["start_time"] > game["time_limit"] * 60:
        del games[ctx.channel.id]
        await ctx.send(f"–í—Ä–µ–º—è –∏–≥—Ä—ã –∏—Å—Ç–µ–∫–ª–æ! –ò–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")


# –ó–∞–ø—É—Å–∫ Flask –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
Thread(target=run_flask).start()

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.run(TOKEN)










